name: Psalm Analysis and Security Check

on:
  push:
    branches:
      - Sub-Naveen  # Adjust branch as needed
  pull_request:
    branches:
      - Sub-Naveen  # Adjust branch as needed

jobs:
  static-analysis:
    name: Static Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4' 
      - name: Clear Cache
        run: composer clear-cache
        
      - name: Install Composer
        run: |
          php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
          php composer-setup.php --install-dir=/usr/local/bin --filename=composer
          php -r "unlink('composer-setup.php');"
        # Optionally update Composer to the latest version
        # - run: composer self-update

      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Run Psalm
        run: php vendor/bin/psalm --config=psalm.xml --output-format=sarif --report=psalm.sarif
        id: psalm-analysis  # Set an ID for later reference
        continue-on-error: true

      - name: Upload Psalm SARIF to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: psalm.sarif
        if: steps.psalm-analysis.outputs.psalm-success == 'true'  # Only upload if Psalm analysis was successful

      - name: Install PHP Security Checker
        run: composer global require enlightn/security-checker

      - name: Run Security Check and Save JSON Output
        run: |
          ~/.composer/vendor/bin/security-checker security:check --format=json > security.json
          cat security.json  # Debugging: Output the content of security.json

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Convert JSON to SARIF
        run: |
          if [[ -s "security.json" ]]; then
            jq -n \
              --arg version "2.1.0" \
              --arg schema "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.5.json" \
              --arg uri "https://github.com/enlightn/security-checker" \
              '{
                "version": $version,
                "$schema": $schema,
                "runs": []
              }' > security.sarif
          else
            echo "security.json is empty or not found."
          fi

      - name: Upload Security Checker SARIF to GitHub Code Scanning
        if: success() && steps.psalm-analysis.outputs.psalm-success == 'true'  # Only upload if Psalm analysis was successful
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: security.sarif
